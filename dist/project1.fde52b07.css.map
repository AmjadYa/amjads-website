{"mappings":"AAGA;;;;;;;;;;;AAeE;;;;;;AAMA;;;;;;;AAQA;;;;;;;;;;;;;AAcA;;;;;;AAOA;;;;;AAMA;;;;;;AAMA;;;;;;;;;AASA;;;;;AAMA;;;;;;;AAQA;;;;;;AAMA;;;;;;AAMA;;;;AAKA;;;;;;;AAOA;;;;;;;;;AASA;;;;;AAMA;;;;;;;;;;;;;;AAcA;;;;;AAKA;;;;AAIA;;;;AAIA;;;;;;AAMA;;;;AAKA;;;;;AAOA;;;;;;;AAOA;;;;;AAKA;;;;;AAMA;;;;;AAKA;;;;;;;AAQA;;;;;;;AAYA;;;;;;;;AASA;;;;;AAIA","sources":["public/project_template.css"],"sourcesContent":["/* Reuse some of your main styles or adapt as needed */\n\n/* Root Variables (Default Monochrome if no localStorage theme is set) */\n:root {\n    /* Some default fallback, similar to your style.css */\n    --background-color: #ffffff;\n    --primary-color: #000000;\n    --secondary-color: #333333;\n    --accent-color: #555555;\n    --text-color: #000000;\n    --neutral-color: #f0f0f0;\n  \n    /* Adjust spacing as you see fit */\n    --gutter: 5vw;\n    --header-height: 60px; /* for convenience */\n  }\n  \n  /* General Resets */\n  * {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n  }\n  \n  body {\n    font-family: \"Work Sans\", sans-serif;\n    background-color: var(--background-color);\n    color: var(--text-color);\n    transition: background-color 0.3s ease, color 0.3s ease;\n  }\n  \n  /* Header */\n  header {\n    background-color: var(--primary-color);\n    color: var(--neutral-color);\n    position: fixed;\n    top: 0;\n    width: 100%;\n    height: var(--header-height);\n    z-index: 999;\n    display: flex;\n    align-items: center;\n    padding: 0 var(--gutter);\n  }\n  \n  /* Home Link (name in the top-left) */\n  header h1 {\n    margin: 0;\n    font-size: 1.2rem;\n    letter-spacing: 2px;\n  }\n  \n  /* Make sure the name is clickable and sends the user back to home */\n  .home-link {\n    text-decoration: none;\n    color: var(--neutral-color);\n  }\n  \n  /* Nav Links */\n  .nav-links {\n    display: flex;\n    gap: 20px;\n    margin-left: auto; /* push them to the right side */\n  }\n  \n  .nav-links a {\n    color: var(--neutral-color);\n    text-decoration: none;\n    font-weight: bold;\n    padding: 8px 12px;\n    border-radius: 5px;\n    transition: background-color 0.3s ease, color 0.3s ease;\n  }\n  \n  .nav-links a:hover {\n    background-color: var(--accent-color);\n    color: var(--background-color);\n  }\n  \n  /* Hero Section */\n  .hero {\n    padding-top: var(--header-height);\n    /* You might want a nice margin or background image here. */\n    background-color: var(--neutral-color);\n    padding-bottom: 40px;\n    text-align: center;\n  }\n  \n  .hero-text {\n    max-width: 800px;\n    margin: 0 auto;\n    padding: 40px 20px;\n  }\n  \n  .hero-text h2 {\n    font-size: 2rem;\n    color: var(--secondary-color);\n    margin-bottom: 10px;\n  }\n  \n  .hero-text p {\n    margin-bottom: 20px;\n  }\n  \n  /* Resource Links (under hero paragraph) */\n  .resource-links {\n    display: flex;\n    gap: 15px;\n    justify-content: center;\n    flex-wrap: wrap;\n  }\n  \n  .resource-links a {\n    background-color: var(--accent-color);\n    color: var(--background-color);\n    text-decoration: none;\n    padding: 8px 16px;\n    border-radius: 6px;\n    transition: background-color 0.3s, color 0.3s;\n  }\n  \n  .resource-links a:hover {\n    background-color: var(--secondary-color);\n    color: var(--accent-color);\n  }\n  \n  /* Table of Contents (sticky on scroll) */\n  .table-of-contents {\n    position: absolute; /* we’ll switch to fixed once scrolled */\n    top: 150vh; /* initially place it far below the hero... */\n    left: var(--gutter);\n    width: 200px;\n    background-color: var(--neutral-color);\n    border: 2px solid var(--secondary-color);\n    border-radius: 8px;\n    padding: 15px;\n    transition: opacity 0.3s ease, transform 0.3s ease;\n    opacity: 0; /* hidden initially */\n    pointer-events: none; /* don’t let user hover it while hidden */\n  }\n  \n  .table-of-contents h3 {\n    margin-bottom: 10px;\n    font-size: 1.1rem;\n  }\n  \n  .table-of-contents ul {\n    list-style: none;\n  }\n  \n  .table-of-contents li {\n    margin-bottom: 6px;\n  }\n  \n  .table-of-contents li a {\n    text-decoration: none;\n    color: var(--text-color);\n    transition: color 0.3s;\n  }\n  \n  .table-of-contents li a:hover {\n    color: var(--secondary-color);\n  }\n  \n  /* Main Sections */\n  main {\n    /* Enough top margin to avoid header overlap */\n    margin-top: calc(var(--header-height) + 20px);\n    margin-bottom: 100px; /* give some space for footer */\n  }\n  \n  /* Content Section styling */\n  .content-section {\n    max-width: 800px;\n    margin: 0 auto;\n    padding: 40px 20px;\n    border-bottom: 1px solid var(--accent-color);\n  }\n  \n  .content-section h2 {\n    margin-bottom: 10px;\n    color: var(--secondary-color);\n  }\n  \n  .content-section p {\n    margin-bottom: 20px;\n    line-height: 1.6;\n  }\n  \n  /* Centered image */\n  .centered-image {\n    text-align: center;\n    margin-bottom: 20px;\n  }\n  \n  .centered-image img {\n    max-width: 100%;\n    height: auto;\n    border: 2px solid var(--secondary-color);\n    border-radius: 5px;\n  }\n  \n  /* Footer */\n  footer {\n    text-align: center;\n    padding: 20px;\n    background-color: var(--primary-color);\n    color: var(--neutral-color);\n  }\n  \n  /* Sticky ToC logic: once the user scrolls past a certain point,\n     we want it to become position: fixed. \n     We'll handle the actual \"appear\" logic via JS. */\n  \n  /* (Optional) If you want it fully pinned once sticky, we can do: */\n  .table-of-contents.sticky {\n    position: fixed;\n    top: 80px; /* some margin below header */\n    opacity: 1;\n    pointer-events: auto;\n    transform: translateY(0);\n  }\n  \n  /* If you want some fade in or sliding effect, you can do something like: */\n  .table-of-contents.sticky-enter {\n    transform: translateY(-10px);\n    opacity: 0;\n  }\n  .table-of-contents.sticky-enter.sticky-enter-active {\n    transform: translateY(0);\n    opacity: 1;\n  }\n  \n  /* ~~~~~ (You can refine these animations or transitions to taste) ~~~~~ */\n  "],"names":[],"version":3,"file":"project1.fde52b07.css.map","sourceRoot":"/__parcel_source_root/"}